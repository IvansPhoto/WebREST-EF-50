// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebREST_EF_50.Data;

namespace WebREST_EF_50.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20210107141743_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("WebREST_EF_50.Models.Company", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long?>("HqCompanyId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("ResponsibleUserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("HqCompanyId");

                    b.HasIndex("ResponsibleUserId");

                    b.ToTable("Company");
                });

            modelBuilder.Entity("WebREST_EF_50.Models.Email", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long?>("CompanyId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long?>("EmployeeId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("UserId");

                    b.ToTable("Emails");
                });

            modelBuilder.Entity("WebREST_EF_50.Models.Employee", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long?>("CompanyId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("ResponsibleUserId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("ResponsibleUserId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("WebREST_EF_50.Models.Objective", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long?>("CompanyId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long?>("EmployeeId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("FinishDate")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsFinished")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ObjectType")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("ProjectId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("ResponsibleUserId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("ProjectId");

                    b.HasIndex("ResponsibleUserId");

                    b.ToTable("Objectives");
                });

            modelBuilder.Entity("WebREST_EF_50.Models.Phone", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long?>("CompanyId")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("EmployeeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("UserId");

                    b.ToTable("Phones");
                });

            modelBuilder.Entity("WebREST_EF_50.Models.Project", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long?>("CompanyId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long?>("EmployeeId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("FinishDate")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsFinished")
                        .HasColumnType("INTEGER");

                    b.Property<long>("ResponsibleUserId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("ResponsibleUserId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("WebREST_EF_50.Models.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasDiscriminator<string>("Discriminator").HasValue("User");
                });

            modelBuilder.Entity("WebREST_EF_50.Models.User+Admin", b =>
                {
                    b.HasBaseType("WebREST_EF_50.Models.User");

                    b.Property<int>("Access")
                        .HasColumnType("INTEGER");

                    b.HasDiscriminator().HasValue("Admin");
                });

            modelBuilder.Entity("WebREST_EF_50.Models.Company", b =>
                {
                    b.HasOne("WebREST_EF_50.Models.Company", "HqCompany")
                        .WithMany()
                        .HasForeignKey("HqCompanyId");

                    b.HasOne("WebREST_EF_50.Models.User", "ResponsibleUser")
                        .WithMany("Companies")
                        .HasForeignKey("ResponsibleUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HqCompany");

                    b.Navigation("ResponsibleUser");
                });

            modelBuilder.Entity("WebREST_EF_50.Models.Email", b =>
                {
                    b.HasOne("WebREST_EF_50.Models.Company", null)
                        .WithMany("Emails")
                        .HasForeignKey("CompanyId");

                    b.HasOne("WebREST_EF_50.Models.Employee", null)
                        .WithMany("Emails")
                        .HasForeignKey("EmployeeId");

                    b.HasOne("WebREST_EF_50.Models.User", null)
                        .WithMany("Emails")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("WebREST_EF_50.Models.Employee", b =>
                {
                    b.HasOne("WebREST_EF_50.Models.Company", "Company")
                        .WithMany("Employees")
                        .HasForeignKey("CompanyId");

                    b.HasOne("WebREST_EF_50.Models.User", "ResponsibleUser")
                        .WithMany("Employees")
                        .HasForeignKey("ResponsibleUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");

                    b.Navigation("ResponsibleUser");
                });

            modelBuilder.Entity("WebREST_EF_50.Models.Objective", b =>
                {
                    b.HasOne("WebREST_EF_50.Models.Company", "Company")
                        .WithMany("Objectives")
                        .HasForeignKey("CompanyId");

                    b.HasOne("WebREST_EF_50.Models.Employee", "Employee")
                        .WithMany("Objectives")
                        .HasForeignKey("EmployeeId");

                    b.HasOne("WebREST_EF_50.Models.Project", "Project")
                        .WithMany("Objectives")
                        .HasForeignKey("ProjectId");

                    b.HasOne("WebREST_EF_50.Models.User", "ResponsibleUser")
                        .WithMany("Objectives")
                        .HasForeignKey("ResponsibleUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");

                    b.Navigation("Employee");

                    b.Navigation("Project");

                    b.Navigation("ResponsibleUser");
                });

            modelBuilder.Entity("WebREST_EF_50.Models.Phone", b =>
                {
                    b.HasOne("WebREST_EF_50.Models.Company", null)
                        .WithMany("Phones")
                        .HasForeignKey("CompanyId");

                    b.HasOne("WebREST_EF_50.Models.Employee", null)
                        .WithMany("Phones")
                        .HasForeignKey("EmployeeId");

                    b.HasOne("WebREST_EF_50.Models.User", null)
                        .WithMany("Phones")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("WebREST_EF_50.Models.Project", b =>
                {
                    b.HasOne("WebREST_EF_50.Models.Company", "Company")
                        .WithMany("Projects")
                        .HasForeignKey("CompanyId");

                    b.HasOne("WebREST_EF_50.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId");

                    b.HasOne("WebREST_EF_50.Models.User", "ResponsibleUser")
                        .WithMany("Projects")
                        .HasForeignKey("ResponsibleUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");

                    b.Navigation("Employee");

                    b.Navigation("ResponsibleUser");
                });

            modelBuilder.Entity("WebREST_EF_50.Models.Company", b =>
                {
                    b.Navigation("Emails");

                    b.Navigation("Employees");

                    b.Navigation("Objectives");

                    b.Navigation("Phones");

                    b.Navigation("Projects");
                });

            modelBuilder.Entity("WebREST_EF_50.Models.Employee", b =>
                {
                    b.Navigation("Emails");

                    b.Navigation("Objectives");

                    b.Navigation("Phones");
                });

            modelBuilder.Entity("WebREST_EF_50.Models.Project", b =>
                {
                    b.Navigation("Objectives");
                });

            modelBuilder.Entity("WebREST_EF_50.Models.User", b =>
                {
                    b.Navigation("Companies");

                    b.Navigation("Emails");

                    b.Navigation("Employees");

                    b.Navigation("Objectives");

                    b.Navigation("Phones");

                    b.Navigation("Projects");
                });
#pragma warning restore 612, 618
        }
    }
}
